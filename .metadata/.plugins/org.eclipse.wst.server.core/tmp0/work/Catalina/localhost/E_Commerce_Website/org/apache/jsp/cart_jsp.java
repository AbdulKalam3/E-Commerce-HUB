/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.88
 * Generated at: 2024-12-24 08:13:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" href=\"images/icon.png\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"CSS/cart-style.css\">\r\n");
      out.write("    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <title>Cart</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("    <div class=\"container header\">\r\n");
      out.write("        <div class=\"row title\">\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("                <img src=\"images/icon.png\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("                <h1>E-Commerce HUB</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col\">\r\n");
      out.write("                <ul class=\"navlist\">\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"index.jsp\"><i class='bx bx-home-alt-2'></i>Home</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"#cart\"><i class='bx bx-cart-alt'></i>Cart</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"wishlist.jsp\"><i class='bx bx-heart'></i>Wishlist</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<section id=\"cart\">\r\n");
      out.write("    <div class=\"container cart\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            ");

                String DB_URL = "jdbc:mysql://localhost:3306/Ecommerce";
                String DB_USER = "root";
                String DB_PASSWORD = "mysql";
                Connection conn = null;
                Statement stmt = null;
                ResultSet rs = null;
                double totalPrice = 0.0;

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
                    stmt = conn.createStatement();
                    String sql = "SELECT * FROM cart";
                    rs = stmt.executeQuery(sql);

                    while (rs.next()) {
                        String productName = rs.getString("product_name");
                        double price = rs.getDouble("price");
                        String imageUrl = rs.getString("image_url");
                        int quantity = rs.getInt("quantity"); // Assuming there's a 'quantity' column in the cart table

                        totalPrice += price * quantity;  // Adjust total price based on quantity
            
      out.write("\r\n");
      out.write("                       <div class=\"col\">\r\n");
      out.write("						    <div class=\"items\">\r\n");
      out.write("						        <img src=\"");
      out.print( imageUrl );
      out.write("\" alt=\"Product Image\">\r\n");
      out.write("						        <div class=\"items-body\">\r\n");
      out.write("						            <p>");
      out.print( productName );
      out.write("</p>\r\n");
      out.write("						            <p>");
      out.print( String.format("â‚¹%.2f", price) );
      out.write("</p> \r\n");
      out.write("						            \r\n");
      out.write("						            <!-- Display the quantity and allow updating it -->\r\n");
      out.write("						            <div class=\"quantity-controls\">\r\n");
      out.write("						                <form action=\"updatequantity\" method=\"post\" class=\"quantity-form\">\r\n");
      out.write("						                    <input type=\"hidden\" name=\"product_id\" value=\"");
      out.print( rs.getInt("id") );
      out.write("\">\r\n");
      out.write("						                    <button type=\"submit\" name=\"action\" value=\"decrease\" class=\"btn btn-secondary\">-</button>\r\n");
      out.write("						                    <input type=\"text\" name=\"quantity\" value=\"");
      out.print( quantity );
      out.write("\" class=\"quantity-input\" readonly>\r\n");
      out.write("						                    <button type=\"submit\" name=\"action\" value=\"increase\" class=\"btn btn-secondary\">+</button>\r\n");
      out.write("						                </form>\r\n");
      out.write("						            </div>\r\n");
      out.write("\r\n");
      out.write("						            <form action=\"removeproduct\" method=\"post\" class=\"btn1\">\r\n");
      out.write("						                <input type=\"hidden\" name=\"product_id\" value=\"");
      out.print( rs.getInt("id") );
      out.write("\">\r\n");
      out.write("						                <button type=\"submit\" class=\"btn btn-danger\">Remove</button>\r\n");
      out.write("						            </form>\r\n");
      out.write("						            <form class=\"buy\">\r\n");
      out.write("						                <button type=\"submit\" class=\"buy\">Buy</button>\r\n");
      out.write("						            </form>\r\n");
      out.write("						        </div>\r\n");
      out.write("						    </div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("            ");

                    }
                } catch (ClassNotFoundException | SQLException e) {
                    e.printStackTrace();
                    out.println("<div class='col-12 text-center'><p>Error fetching cart items: " + e.getMessage() + "</p></div>");
                } finally {
                    if (rs != null) try { rs.close(); } catch (SQLException ignored) {}
                    if (stmt != null) try { stmt.close(); } catch (SQLException ignored) {}
                    if (conn != null) try { conn.close(); } catch (SQLException ignored) {}
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("		    <div class=\"col-12 text-right\">\r\n");
      out.write("		        <h3>Total: ");
      out.print( String.format("â‚¹%.2f", totalPrice) );
      out.write("</h3>\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    window.onload = function() {\r\n");
      out.write("        if(sessionStorage.getItem(\"scrollPos\") != null) {\r\n");
      out.write("            window.scrollTo(0, sessionStorage.getItem(\"scrollPos\"));\r\n");
      out.write("        }\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    window.onbeforeunload = function() {\r\n");
      out.write("        sessionStorage.setItem(\"scrollPos\", window.scrollY);\r\n");
      out.write("    };\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
